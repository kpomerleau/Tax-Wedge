setwd("C:/Users/kep/Documents/GitHub/Tax-Wedge")
rm(list=ls())
#This spreadsheet has all the income data and will show all the calculations, step-by-step. Data for states is taken directly from TF github
income<-read.csv("income.csv", header = TRUE, fill = TRUE, sep = ",")
statetax<-read.csv("statetaxdata.csv", header = TRUE, fill = TRUE, sep = ",")
#############Federal Tax Wedge Function###############################
#Load Federal Tax Parameters
fedtax<-read.csv("fedtax.csv", header = TRUE, fill = TRUE, sep = ",")
FederalTaxWedge<-function(income, children, married, hoh, stateincometax){
stateincometax<-income*.06 #temporarily in here
#############Federal Taxable Income##############################
#Calculating PERSONAL EXEMPTION
if(income>fedtax$pep_pease_threshold[1+married+(hoh*2)]){
personalexemption<-max(0,(1-(((income-fedtax$pep_pease_threshold[1+married+(hoh*2)])/2500)*.02)))*(fedtax$personal_exemption[1]*(1+children+married))
} else {
personalexemption<-fedtax$personal_exemption[1]*(1+children+married)
}
#Calculating STANDARD/ITEMIZED DEDUCTION
if(stateincometax>fedtax$standard_deduction[1+married+(hoh*2)]){
if(income>fedtax$pep_pease_threshold[1+married+(hoh*2)]){
deduction<-stateincometax-((income-fedtax$pep_pease_threshold[1+married+(hoh*2)])*.03)
} else {
deduction<-stateincometax
}
} else {
deduction<-fedtax$standard_deduction[1+married+(hoh*2)]
}
taxableincome<-max(0,income-deduction-personalexemption)
#############Federal Income Tax################################
#Pre-Credit Federal Income Tax Bill
x<-1 #An index that counts through the tax brackets
federalincometax<-0
#To make this a little easier, I don't call on the variable names in the dataset. single:3,married:4,hoh:5
while(TRUE){
if( taxableincome < fedtax[x+1,3+married+(hoh*2)] & x < length(fedtax$incometaxrate)){
federalincometax <- federalincometax + ( ( taxableincome - fedtax[x,3+married+(hoh*2)] ) * fedtax$incometaxrate[x] )
break
} else {
federalincometax <- federalincometax + fedtax$incometaxrate[x] * ( fedtax[x+1,3+married+(hoh*2)] - fedtax[x,3+married+(hoh*2)] )
x<-x+1
}
if( x == length(fedtax$incometaxrate) ) {
federalincometax <- federalincometax + fedtax$incometaxrate[x] * ( taxableincome - fedtax[x,3+married+(hoh*2)] )
break
}
}
###########Child Tax Credit##########
#Child Tax Credit
if(children>0) {
c<-children
if (married == 0) {
if(income <= fedtax$ctcphasein[1]){
ctc<-0
} else if(income < fedtax$ctcphaseout_single[1]){
ctc<-min(fedtax$ctccredit[1]*c,((income-fedtax$ctcphasein[1])*fedtax$ctcphaseinrate[1]))
} else if(income >= fedtax$ctcphaseout_single[1]){
ctc<-max(0,(fedtax$ctccredit[1]*c)-((income-fedtax$ctcphaseout_single[1])*fedtax$ctcphaseoutrate[1]))
}
} else if (married == 1) {
if(income<=fedtax$ctcphasein[1]) {ctc<-0}
else if(income<fedtax$ctcphaseout_married[1]) {ctc<-min(fedtax$ctccredit[1]*c,((income-fedtax$ctcphasein[1])*fedtax$ctcphaseinrate[1]))
} else if(income>fedtax$ctcphaseout_married[1]) {ctc<-max(0,(fedtax$ctccredit[1]*c)-(income-fedtax$ctcphaseout_single[1])*fedtax$ctcphaseoutrate[1])}
}
} else {ctc<-0}
#####Earned Income Tax credit#######
c<-min(children,3)
if(married == 0){
if(income < fedtax$eitc_threshold[1+c]) {
eitc<-income*(fedtax$eitc_max[1+c]/fedtax$eitc_threshold[1+c])
} else if (income >= fedtax$eitc_threshold[1+c] & income <= fedtax$eitc_phaseout_single[1+c]) {
eitc<-fedtax$eitc_max[1+c]
} else if (income > fedtax$eitc_phaseout_single[1+c]) {
eitc<-max(0,fedtax$eitc_max[1+c]+((fedtax$eitc_phaseout_single[1+c]-income)*(fedtax$eitc_max[1+c]/(fedtax$eitc_maxincome_single[1+c]-fedtax$eitc_phaseout_single[1+c]))))
}
} else if (married == 1) {
if(income < fedtax$eitc_threshold[1+c]) {
eitc<-income*(fedtax$eitc_max[1+c]/fedtax$eitc_threshold[1+c])
} else if (income >= fedtax$eitc_threshold[1+c] & income <= fedtax$eitc_phaseout_married[1+c]) {
eitc<-fedtax$eitc_max[1+c]
} else if (income > fedtax$eitc_phaseout_married[1+c]) {
eitc<-max(0,fedtax$eitc_max[1+c]+((fedtax$eitc_phaseout_married[1+c]-income)*(fedtax$eitc_max[1+c]/(fedtax$eitc_maxincome_married[1+c]-fedtax$eitc_phaseout_married[1+c]))))
}
}
##########Federal Income Tax with Tax Credits#############
netfederalincometax<-federalincometax-ctc-eitc
#############Federal Payroll Taxes########################
#Employee payroll taxes
x<-1 #An index that counts through the payroll tax brackets
employeepayrolltax<-0
while(TRUE){
if( income < fedtax$emppayrollbracket[x+1] & x < sum(!is.na( fedtax$emppayrollbracket ) ) ){
employeepayrolltax <- employeepayrolltax + ( ( income - fedtax$emppayrollbracket[x] ) * fedtax$emppayrollrate[x] )
break
} else {
employeepayrolltax <- employeepayrolltax + fedtax$emppayrollrate[x] * ( fedtax$emppayrollbracket[x+1] - fedtax$emppayrollbracket[x] )
x<-x+1
}
if( x == sum(!is.na(fedtax$emppayrollbracket))){
employeepayrolltax <- employeepayrolltax + fedtax$emppayrollrate[x] * ( income - fedtax$emppayrollbracket[x] )
break
}
}
#Employer Social Security and Payroll Taxes
x<-1 #An index that counts through the payroll tax brackets
employerpayrolltax<-0
while(TRUE){
if( income < fedtax$emplrayrollbracket[x+1] & x < sum(!is.na( fedtax$emplrayrollbracket ) ) ){
employerpayrolltax <- employerpayrolltax + ( ( income - fedtax$emplrayrollbracket[x] ) * fedtax$emplrpayrollrate[x] )
break
} else {
employerpayrolltax <- employerpayrolltax + fedtax$emplrpayrollrate[x] * ( fedtax$emplrayrollbracket[x+1] - fedtax$emppayrollbracket[x] )
x<-x+1
}
if( x == sum(!is.na(fedtax$emppayrollbracket))){
employerpayrolltax <- employerpayrolltax + fedtax$emplrpayrollrate[x] * ( income - fedtax$emppayrollbracket[x] )
break
}
}
#Federal Unemployment Insurance Tax
stateui<-0.03*16747 #This is a test amount for the federal uitax credit.
if(income<=fedtax$ui[1]){
fedui<-fedtax$ui[2]*income
} else {
fedui<-fedtax$ui[2]*fedtax$ui[1]
}
#90 percent credit (minimum federal ui tax is $42, max is $420)
fedui<-max(fedui*.1,fedui-stateui)
######Federal Tax Wedge Output######
#Possible Parameters
#income
#netfederalincometax
#stateincometax
#employeepayrolltax
#employerpayrolltax
#fedui
#taxableincome
#deduction
#personalexemption
#ctc
#eitc
return(netfederalincometax+employeepayrolltax+stateincometax)
}
setwd("C:/Users/Kyle/Documents/GitHub/Tax-Wedge")
rm(list=ls())
#This spreadsheet has all the income data and will show all the calculations, step-by-step. Data for states is taken directly from TF github
income<-read.csv("income.csv", header = TRUE, fill = TRUE, sep = ",")
statetax<-read.csv("statetaxdata.csv", header = TRUE, fill = TRUE, sep = ",")
#############Federal Tax Wedge Function###############################
#Load Federal Tax Parameters
fedtax<-read.csv("fedtax.csv", header = TRUE, fill = TRUE, sep = ",")
FederalTaxWedge<-function(income, children, married, hoh, stateincometax){
stateincometax<-income*.06 #temporarily in here
#############Federal Taxable Income##############################
#Calculating PERSONAL EXEMPTION
if(income>fedtax$pep_pease_threshold[1+married+(hoh*2)]){
personalexemption<-max(0,(1-(((income-fedtax$pep_pease_threshold[1+married+(hoh*2)])/2500)*.02)))*(fedtax$personal_exemption[1]*(1+children+married))
} else {
personalexemption<-fedtax$personal_exemption[1]*(1+children+married)
}
#Calculating STANDARD/ITEMIZED DEDUCTION
if(stateincometax>fedtax$standard_deduction[1+married+(hoh*2)]){
if(income>fedtax$pep_pease_threshold[1+married+(hoh*2)]){
deduction<-stateincometax-((income-fedtax$pep_pease_threshold[1+married+(hoh*2)])*.03)
} else {
deduction<-stateincometax
}
} else {
deduction<-fedtax$standard_deduction[1+married+(hoh*2)]
}
taxableincome<-max(0,income-deduction-personalexemption)
#############Federal Income Tax################################
#Pre-Credit Federal Income Tax Bill
x<-1 #An index that counts through the tax brackets
federalincometax<-0
#To make this a little easier, I don't call on the variable names in the dataset. single:3,married:4,hoh:5
while(TRUE){
if( taxableincome < fedtax[x+1,3+married+(hoh*2)] & x < length(fedtax$incometaxrate)){
federalincometax <- federalincometax + ( ( taxableincome - fedtax[x,3+married+(hoh*2)] ) * fedtax$incometaxrate[x] )
break
} else {
federalincometax <- federalincometax + fedtax$incometaxrate[x] * ( fedtax[x+1,3+married+(hoh*2)] - fedtax[x,3+married+(hoh*2)] )
x<-x+1
}
if( x == length(fedtax$incometaxrate) ) {
federalincometax <- federalincometax + fedtax$incometaxrate[x] * ( taxableincome - fedtax[x,3+married+(hoh*2)] )
break
}
}
###########Child Tax Credit##########
#Child Tax Credit
if(children>0) {
c<-children
if (married == 0) {
if(income <= fedtax$ctcphasein[1]){
ctc<-0
} else if(income < fedtax$ctcphaseout_single[1]){
ctc<-min(fedtax$ctccredit[1]*c,((income-fedtax$ctcphasein[1])*fedtax$ctcphaseinrate[1]))
} else if(income >= fedtax$ctcphaseout_single[1]){
ctc<-max(0,(fedtax$ctccredit[1]*c)-((income-fedtax$ctcphaseout_single[1])*fedtax$ctcphaseoutrate[1]))
}
} else if (married == 1) {
if(income<=fedtax$ctcphasein[1]) {ctc<-0}
else if(income<fedtax$ctcphaseout_married[1]) {ctc<-min(fedtax$ctccredit[1]*c,((income-fedtax$ctcphasein[1])*fedtax$ctcphaseinrate[1]))
} else if(income>fedtax$ctcphaseout_married[1]) {ctc<-max(0,(fedtax$ctccredit[1]*c)-(income-fedtax$ctcphaseout_single[1])*fedtax$ctcphaseoutrate[1])}
}
} else {ctc<-0}
#####Earned Income Tax credit#######
c<-min(children,3)
if(married == 0){
if(income < fedtax$eitc_threshold[1+c]) {
eitc<-income*(fedtax$eitc_max[1+c]/fedtax$eitc_threshold[1+c])
} else if (income >= fedtax$eitc_threshold[1+c] & income <= fedtax$eitc_phaseout_single[1+c]) {
eitc<-fedtax$eitc_max[1+c]
} else if (income > fedtax$eitc_phaseout_single[1+c]) {
eitc<-max(0,fedtax$eitc_max[1+c]+((fedtax$eitc_phaseout_single[1+c]-income)*(fedtax$eitc_max[1+c]/(fedtax$eitc_maxincome_single[1+c]-fedtax$eitc_phaseout_single[1+c]))))
}
} else if (married == 1) {
if(income < fedtax$eitc_threshold[1+c]) {
eitc<-income*(fedtax$eitc_max[1+c]/fedtax$eitc_threshold[1+c])
} else if (income >= fedtax$eitc_threshold[1+c] & income <= fedtax$eitc_phaseout_married[1+c]) {
eitc<-fedtax$eitc_max[1+c]
} else if (income > fedtax$eitc_phaseout_married[1+c]) {
eitc<-max(0,fedtax$eitc_max[1+c]+((fedtax$eitc_phaseout_married[1+c]-income)*(fedtax$eitc_max[1+c]/(fedtax$eitc_maxincome_married[1+c]-fedtax$eitc_phaseout_married[1+c]))))
}
}
##########Federal Income Tax with Tax Credits#############
netfederalincometax<-federalincometax-ctc-eitc
#############Federal Payroll Taxes########################
#Employee payroll taxes
x<-1 #An index that counts through the payroll tax brackets
employeepayrolltax<-0
while(TRUE){
if( income < fedtax$emppayrollbracket[x+1] & x < sum(!is.na( fedtax$emppayrollbracket ) ) ){
employeepayrolltax <- employeepayrolltax + ( ( income - fedtax$emppayrollbracket[x] ) * fedtax$emppayrollrate[x] )
break
} else {
employeepayrolltax <- employeepayrolltax + fedtax$emppayrollrate[x] * ( fedtax$emppayrollbracket[x+1] - fedtax$emppayrollbracket[x] )
x<-x+1
}
if( x == sum(!is.na(fedtax$emppayrollbracket))){
employeepayrolltax <- employeepayrolltax + fedtax$emppayrollrate[x] * ( income - fedtax$emppayrollbracket[x] )
break
}
}
#Employer Social Security and Payroll Taxes
x<-1 #An index that counts through the payroll tax brackets
employerpayrolltax<-0
while(TRUE){
if( income < fedtax$emplrayrollbracket[x+1] & x < sum(!is.na( fedtax$emplrayrollbracket ) ) ){
employerpayrolltax <- employerpayrolltax + ( ( income - fedtax$emplrayrollbracket[x] ) * fedtax$emplrpayrollrate[x] )
break
} else {
employerpayrolltax <- employerpayrolltax + fedtax$emplrpayrollrate[x] * ( fedtax$emplrayrollbracket[x+1] - fedtax$emppayrollbracket[x] )
x<-x+1
}
if( x == sum(!is.na(fedtax$emppayrollbracket))){
employerpayrolltax <- employerpayrolltax + fedtax$emplrpayrollrate[x] * ( income - fedtax$emppayrollbracket[x] )
break
}
}
#Federal Unemployment Insurance Tax
stateui<-0.03*16747 #This is a test amount for the federal uitax credit.
if(income<=fedtax$ui[1]){
fedui<-fedtax$ui[2]*income
} else {
fedui<-fedtax$ui[2]*fedtax$ui[1]
}
#90 percent credit (minimum federal ui tax is $42, max is $420)
fedui<-max(fedui*.1,fedui-stateui)
######Federal Tax Wedge Output######
#Possible Parameters
#income
#netfederalincometax
#stateincometax
#employeepayrolltax
#employerpayrolltax
#fedui
#taxableincome
#deduction
#personalexemption
#ctc
#eitc
return(netfederalincometax+employeepayrolltax+stateincometax)
}
b<-1
while (b < 500){
income[b]<-b*1000
marginaltaxrate[b]<-(FederalTaxWedge(income[b],children,married,hoh,stateincometax)-FederalTaxWedge(income[b]-1,children,married,hoh,stateincometax))/1
averagetaxrate[b]<-FederalTaxWedge(income[b],children,married,hoh,stateincometax)/income[b]
b<-b+1
}
state<-1
children<-0
married<-0
hoh<-0 #This cannot be 1 if married is 1
income<-0
marginaltaxrate<-NULL
averagetaxrate<-NULL
b<-1
while (b < 500){
income[b]<-b*1000
marginaltaxrate[b]<-(FederalTaxWedge(income[b],children,married,hoh,stateincometax)-FederalTaxWedge(income[b]-1,children,married,hoh,stateincometax))/1
averagetaxrate[b]<-FederalTaxWedge(income[b],children,married,hoh,stateincometax)/income[b]
b<-b+1
}
plot(income,marginaltaxrate)
View(statetax)
list(statetax$stateName)
levels(statetax$stateName)
state<-"Alabama"
state
stateparam<-statetax[statetax$stateName == state]
stateparam
state<-Alabama
state<-factor(Alabama)
state<-as.factor(Alabama)
state<-statetax$stateName[1]
state<-statetax$stateName[,1]
state<-statetax$stateName[1,]
state<-statetax$stateName[1,1]
state<-statetax$stateid[1]
statetax$stateid[1]
statetax$stateid[2]
statetax$stateid[3]
statetax$stateid[4]
statetax$stateid[1,1]
statetax
statetax$stateid
state<-statetax$id[1]
state
stateparam<-statetax[statetax$id == state]
View(stateparam)
stateparam<-statetax[,statetax$id == state]
stateparam<-statetax[statetax$id == state,]
View(stateparam)
stateparam$personalexemptionsingle
stateparam$personalexemptionsingle[1]
if(married == 1){ standarddeduction <- stateparam$deductionmarried[1]
} else if(hoh == 1){ standardeduction <- stateparam$deductionmarried[1]
} else { standarddeduction <- stateparam$deductionsingle[1]
}
#Special state specific adjustments to the standard deduction
#none yet.
#Personal Exemption
if(married == 1){ personalexemption <- stateparam$personalexemptionsingle[1]
} else { personalexemption <- stateparam$deductionsingle[1]
}
personlaexemption<-personalexemption+(stateparam$personalexemptiondependent[1]*children)
income<-20000
if(married == 1){ standarddeduction <- stateparam$deductionmarried[1]
} else if(hoh == 1){ standardeduction <- stateparam$deductionmarried[1]
} else { standarddeduction <- stateparam$deductionsingle[1]
}
#Special state specific adjustments to the standard deduction
#none yet.
#Personal Exemption
if(married == 1){ personalexemption <- stateparam$personalexemptionsingle[1]
} else { personalexemption <- stateparam$deductionsingle[1]
}
personalexemption<-personalexemption+(stateparam$personalexemptiondependent[1]*children)
#State specific adjustments to the personal exemption
#none yet
statetaxableincome<-income-standarddeduction-personalexemption
